#!/usr/bin/env python3

"""
Script takes a {sample}_pyclone.tsv file from the WES pipeline (generated by
sequenza in the clonality module) and adapts it for use in pyclone-vi
ref: https://github.com/Roth-Lab/pyclone-vi

{sample}_pyclone.tsv header:
mutation_id ref_counts  var_counts  normal_cn   minor_cn    major_cn    variant_case    variant_freq    genotype

PyClone-VI expected header:
mutation_id sample_id   ref_counts  alt_counts  major_cn    minor_cn    normal_cn
"""

import os
import io
import sys

import numpy as np
import pandas as pd

from optparse import OptionParser

def main():
    usage = "USAGE: %prog -f [pyclone.tsv file from WES] -o [output .png]"
    optparser = OptionParser(usage=usage)
    optparser.add_option("-f", "--file", help="pyclone.tsv file from WES)")
    optparser.add_option("-n", "--name", help="sample name, default=filename")
    optparser.add_option("-o", "--output", help="output tsv file", default=None)
    (options, args) = optparser.parse_args(sys.argv)

    if not options.file or not options.output:
        optparser.print_help()
        sys.exit(-1)

    if not options.name:
        fname = os.path.basename(options.file)
        sample_name = ".".join(fname.split(".")[:-1])

    else:
        sample_name = options.name

    df = pd.read_csv(options.file, sep="\t")
    ## Add sample_id column
    df['sample_id'] = sample_name
    ## Reanme var_counts to alt_counts
    df.rename(columns={'var_counts': 'alt_counts'}, inplace=True)
    ## Rearrange columns
    df = df[['mutation_id', 'sample_id', 'ref_counts', 'alt_counts','major_cn', 'minor_cn', 'normal_cn']]
    df.to_csv(options.output, sep="\t", index=False)

if __name__ == '__main__':
    main()
